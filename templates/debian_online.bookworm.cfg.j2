##Встановлення локалі
d-i debian-installer/locale string en_US.UTF-8
d-i debian-installer/country string UA
d-i debian-installer/language string en
d-i localechooser/supported-locales multiselect en_US.UTF8, uk_UA.utf8

##Налаштування клавіатури
d-i keyboard-configuration/xkb-keymap select us
d-i keyboard-configuration/variant select American English

#### Налаштування мережі ####
# Автоматичний вибір мережевого інтерфейсу. netcfg вибере інтерфейс, який має посилання, якщо це можливо.
# Це дозволяє пропускати відображення списку, якщо є більше ніж один інтерфейс.
d-i netcfg/choose_interface select auto
## Встановлення імені хосту. Будь-яке ім’я хоста та доменне ім’я, призначене dhcp, має пріоритет
## над значеннями, встановленими тут. Однак встановлення значень все одно запобігає показу запитань,
## навіть якщо значення надходять із dhcp.
d-i netcfg/get_hostname string monitoring
d-i netcfg/get_domain string local

# Вибрати певний інтерфейс:
#d-i netcfg/choose_interface select eth1

## Можливість налаштування мережі вручну
## Якщо ви віддаєте перевагу ручній конфігурації мережі, розкоментуйте наступні рядки і ## Статична конфігурація ##
{# 
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Configure network manually
 #}
##
## Статична конфігурація start##
## 
# Ручне встановлення IPv4-адреси, маски підмережі, шлюзу та DNS
{# 
d-i netcfg/get_ipaddress string 10.7.234.11
d-i netcfg/get_netmask string 255.255.255.0
d-i netcfg/get_gateway string 10.7.234.1
d-i netcfg/get_nameservers string 8.8.4.4 8.8.8.8
d-i netcfg/confirm_static boolean true 
#}
##
## Статична конфігурація end##

##Налаштування часового поясу
d-i time/zone string Europe/Kyiv
d-i clock-setup/utc boolean true
d-i clock-setup/ntp boolean true

##Створення розділів
d-i partman-auto/method string regular
d-i partman-auto/choose_recipe select atomic
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

##Установка базової системи
d-i base-installer/kernel/image string linux-generic

##Налаштування дзеркала для завантаження пакетів
# Якщо ви виберете ftp, рядок для дзеркала/країни встановлювати не потрібно.
d-i mirror/country string manual
d-i mirror/http/hostname string debian.volia.net
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

##Налаштування облікових записів
d-i passwd/root-login boolean false
d-i passwd/make-user boolean true
d-i passwd/user-fullname string Deploy User
d-i passwd/username string deploy
d-i passwd/user-password password deploy
d-i passwd/user-password-again password deploy

##Встановлюємо тільки ssh-server. Вибір та установка пакетів
tasksel tasksel/first multiselect standard, ssh-server
d-i pkgsel/include string sudo mc vim traceroute cloud-init openssh-server apt-transport-https ca-certificates curl gnupg2 software-properties-common docker

##Для встановлення docker
d-i apt-setup/local0/repository string https://download.docker.com/linux/debian bookworm stable
d-i apt-setup/local0/comment string docker
d-i apt-setup/local0/key string https://download.docker.com/linux/debian/gpg

##Налаштування GRUB
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev string default

# Ігнорування помилки Configuring apt. Configure the package manager. apt configuration problem
#d-i preseed/early_command string echo 'apt-setup apt-setup/cdrom-failed note ignored' | debconf-set-selections

##Додавання репозиторію Docker, встановлення пакетів і налаштування користувача
d-i preseed/late_command string \
    in-target sh -c 'echo "deploy ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/000-deploy'; \
    in-target sh -c 'mkdir -p /home/deploy/.ssh && ssh-keygen -t rsa -b 2048 -f /home/deploy/.ssh/id_rsa -N ""'; \
    in-target sh -c 'cp /home/deploy/.ssh/id_rsa.pub /home/deploy/.ssh/authorized_keys'; \
    in-target sh -c 'chown deploy:deploy -R /home/deploy/.ssh && chmod 700 /home/deploy/.ssh && chmod 600 /home/deploy/.ssh/authorized_keys'; \
    in-target sh -c 'sed -i "s|#PermitRootLogin prohibit-password|PermitRootLogin yes|" /etc/ssh/sshd_config'; \
    in-target sh -c 'sed -i "s|#MaxAuthTries 6|MaxAuthTries 3|" /etc/ssh/sshd_config'; \
    in-target sh -c 'sed -i "s|#PubkeyAuthentication yes|PubkeyAuthentication yes|" /etc/ssh/sshd_config'; \
    in-target sh -c 'sed -i "s|#PasswordAuthentication yes|PasswordAuthentication yes|" /etc/ssh/sshd_config'; \
    in-target sh -c 'sed -i "/^PasswordAuthentication yes$/aAuthenticationMethods publickey" /etc/ssh/sshd_config'; \
    in-target sh -c 'echo "#!/bin/bash \napt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin" > /home/deploy/install_docker_and_compose.sh'; \
    in-target sh -c 'echo "\ncurl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \nchmod +x /usr/local/bin/docker-compose \ndocker-compose --version" >> /home/deploy/install_docker_and_compose.sh && chmod +x /home/deploy/install_docker_and_compose.sh'; \
    {# in-target /bin/sh -c 'echo "set bg=dark\nset ai\nset tabstop=2\nset expandtab\nabbr _bash #!/bin/bash\nnmap <C-N> :set invnumber" > /etc/skel/.vimrc'; #}
    in-target sh -c 'echo "set bg=dark\nset ai\nset tabstop=4\nset expandtab\nset showmode\nset nonumber\nabbr _bash #!/bin/bash<CR>\nnmap <C-N> :set invnumber<CR>\nautocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab\nsyntax on" > /etc/skel/.vimrc'; \
    in-target sh -c 'sed -i "s/^# *\(en_US.UTF-8 UTF-8\)/\1/" /etc/locale.gen && locale-gen'; \
    in-target sh -c 'update-locale LANG=en_US.UTF-8';
    in-target sh -c 'apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release vim'; \
    in-target /bin/sh -c 'add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(. /etc/os-release; echo $VERSION_CODENAME) stable"'; \
    in-target sh -c 'curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg'; \
    in-target sh -c 'echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(. /etc/os-release; echo $VERSION_CODENAME) stable" > /etc/apt/sources.list.d/docker.list'; \
    in-target sh -c 'apt-get update'; \
    in-target sh -c 'usermod -aG docker deploy';

##Завершення встановлення
d-i finish-install/reboot_in_progress note
d-i debian-installer/exit/poweroff boolean true